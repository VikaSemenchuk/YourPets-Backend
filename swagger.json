{
    "openapi": "3.0.1",
    "info": {
        "title": "yourPets",
        "description": "API for finding loving families for pets.",
        "version": "1.0"
    },
    "consumes": [
        "application/json",
        "multipart/form-data"
    ],
    "produces": [
        "application/json",
        "multipart/form-data"
    ],
    "servers": [
        {
            "url": "http://localhost:3000/api"
        },
        {
            "url": "https://yourpets.onrender.com/api"
        }
    ],
    "tags": [
        {
            "name": "Users",
            "description": "Authorization endpoints"
        },
        {
            "name": "Notices",
            "description": "Notices endpoints"
        },
        {
            "name": "Pets",
            "description": "Pets endpoints"
        },
        {
            "name": "Friends",
            "description": "Friends endpoints"
        },
        {
            "name": "News",
            "description": "News endpoints"
        }
    ],
    "paths": {
        "/users/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "User registration",
                "parameters": [],
                "requestBody": {
                    "description": "Registration's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User authorized successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "409": {
                        "description": "Email in use",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "User login",
                "parameters": [],
               
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "401": {
                        "description": "Email or password is wrong",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/users/info/update": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user's information",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/UpdateUserInfoResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "User logout",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#components/schemas/LogoutRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {}
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/users/current": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get information of the currently logged-in user",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/GetUserInfoResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "401": {
                        "description": "Email or password is wrong",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/notices": {
            "get": {
                "tags": [
                    "Notices"
                ],
                "summary": "Get all notices",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Number of page"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Number of notices on one page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/GetNoticesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": [
                    "Notices"
                ],
                "summary": "Add new notice",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#components/schemas/AddNoticeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Notice added success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/AddNoticeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/notices/{id}": {
            "get": {
                "tags": [
                    "Notices"
                ],
                "summary": "Get notice by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "Notice's id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/GetNoticeByIdResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/notices/user/added": {
            "get": {
                "tags": [
                    "Notices"
                ],
                "summary": "List of notices added by User",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of page",
                        "required": false
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of notices on one page",
                        "required": false
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/GetNoticesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/notices/user/added/{id}": {
            "delete": {
                "tags": [
                    "Notices"
                ],
                "summary": "Delete notice by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "description": "Notice's id",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notice deleted from ads successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/DeleteNoticeByIdResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/notices/user/favorite": {
            "get": {
                "tags": [
                    "Notices"
                ],
                "summary": "Get user's favorite notices",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Number of page"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Number of notices on one page"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/GetFavoriteNoticesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/notices/user/favorite/{id}": {
            "patch": {
                "tags": [
                    "Notices"
                ],
                "summary": "Add notice to user's favorite by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "Notice's id"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User updated successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/GetNoticesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "Notices"
                ],
                "summary": "Delete notice from favorite by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "description": "Notice's id",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notice deleted from favorites successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/DeleteNoticeByIdResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/notices/users/search": {
            "get": {
                "tags": [
                    "Notices"
                ],
                "summary": "Search notice by category or search field",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "type": "string",
                        "description": "Notice's category",
                        "required": false
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "type": "string",
                        "description": "Notice's title",
                        "required": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Number of page"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Number of notices on one page"
                    }
                ],
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/GetNoticesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/notices/users/filter": {
            "get": {
                "tags": [
                    "Notices"
                ],
                "summary": "Filter notice by sex and date field",
                "parameters": [
                    {
                        "name": "sex",
                        "in": "query",
                        "type": "string",
                        "description": "Sex of pet in notice",
                        "required": false,
                        "enum": ["male", "female"]
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "type": "string",
                        "description": "'1' - age 3 - 12 m; '2' - age up from 1 year; '3' - age up from 2 year; '4' - age up to 1 year and up from 2 year",
                        "required": false,
                        "enum": ["1", "2", "3", "4"]
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Number of page"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Number of notices on one page"
                    }
                ],
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/GetNoticesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/pets": {
            "get": {
                "tags": [
                    "Pets"
                ],
                "summary": "Get list of user's pets",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Number of page"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Number of notices on one page"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/GetPetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": [
                    "Pets"
                ],
                "summary": "Add new pet by authorized user",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#components/schemas/AddPetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pet added success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/AddPetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/pets/{id}": {
            "delete": {
                "tags": [
                    "Pets"
                ],
                "summary": "Remove pet by id",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Pet deleted",
                        "content": {}
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/friends": {
            "get": {
                "tags": [
                    "Friends"
                ],
                "summary": "Get all friends's info",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Number of page"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Number of friends on one page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/GetFriendsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/news": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get all news",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "type": "string",
                        "description": "New's title",
                        "required": false
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "New's limit",
                        "required": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "description": "New's page",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/GetNewsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bed request",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UsersSchemaResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "User's id",
                        "example": "64hn9bdbdrekmv"
                    },
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Your name"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "Qwer12"
                    },
                    "birthday": {
                        "type": "string",
                        "description": "User's birthday date",
                        "format": "date-time"
                    },
                    "phone": {
                        "type": "string",
                        "description": "User's phone number",
                        "example": "+380000000000"
                    },
                    "city": {
                        "type": "string",
                        "description": "User's city",
                        "example": "City"
                    },
                    "token": {
                        "type": "string",
                        "description": "User's security token",
                        "example": "bghfdtgbvfygbvyg.jughvjfhtgjvrthbjyfv.mjdhvgjfgbjvgj"
                    },
                    "avatarURL": {
                        "type": "string",
                        "description": "User's avatar",
                        "example": "//www.example.com/avatar/djghjthgjhhj7tjf7tbgty"
                    },
                    "favorites": {
                        "type": "array",
                        "description": "User's favorite notice",
                        "items": {
                            "type": "object",
                            "description": "Array of user's favorite notices",
                            "$ref": "#components/schemas/GetNoticeByIdResponse"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of creating user",
                        "example": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Date of updating user",
                        "example": "date-time"
                    }
                }
            },
            "GetNoticeByIdResponse": {
                "type": "object",
                "description": "Notices",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "Id of user's favorite notice",
                        "example": "64hn9bdbdrekmv"
                    },
                    "fileURL": {
                        "type": "string",
                        "description": "Pet's photo",
                        "example": "fmhdjrg7rgbghy7",
                        "format": "binary"
                    },
                    "title": {
                        "type": "string",
                        "description": "Name of pet",
                        "example": "User"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category of notice",
                        "example": "for-free"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of pet",
                        "example": "User"
                    },
                    "date": {
                        "type": "string",
                        "description": "Birthday date of pet",
                        "format": "date-time"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of pet in notice",
                        "example": "dog"
                    },
                    "sex": {
                        "type": "string",
                        "description": "Sex of pet in notice",
                        "example": "female"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location of pet in notice",
                        "example": "City"
                    },
                    "price": {
                        "type": "integer",
                        "description": "Price for pet in notice",
                        "example": "12"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comment to notice",
                        "example": "Comment for example"
                    },
                    "owner": {
                        "type": "string",
                        "description": "User's id",
                        "example": "fmhdjrg7rgbghy7"
                    },
                    "ownerEmail": {
                        "type": "string",
                        "description": "User's email",
                        "example": "fmhdjrg7rgbghy7"
                    },
                    "ownerPhone": {
                        "type": "string",
                        "description": "User's phone",
                        "example": "fmhdjrg7rgbghy7"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of creating notice",
                        "example": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Date of updating notice",
                        "example": "date-time"
                    }
                }
            },
            "AddNoticeByIdRequest": {
                "type": "object",
                "description": "Notices",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "Id of user's favorite notice",
                        "example": "64hn9bdbdrekmv"
                    },
                    "fileURL": {
                        "type": "string",
                        "description": "Pet's photo",
                        "example": "fmhdjrg7rgbghy7"
                    },
                    "title": {
                        "type": "string",
                        "description": "Name of pet",
                        "example": "User"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category of notice",
                        "example": "for-free"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of pet",
                        "example": "User"
                    },
                    "date": {
                        "type": "string",
                        "description": "Birthday date of pet",
                        "format": "date-time"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of pet in notice",
                        "example": "dog"
                    },
                    "sex": {
                        "type": "string",
                        "description": "Sex of pet in notice",
                        "example": "female"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location of pet in notice",
                        "example": "City"
                    },
                    "price": {
                        "type": "integer",
                        "description": "Price for pet in notice",
                        "example": "12"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comment to notice",
                        "example": "Comment for example"
                    },
                    "owner": {
                        "type": "string",
                        "description": "User's id",
                        "example": "fmhdjrg7rgbghy7"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of creating notice",
                        "example": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Date of updating notice",
                        "example": "date-time"
                    }
                }
            },
            "RegistrationRequest": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "User"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "Qwer12"
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "Qwer12"
                    }
                }
            },
            "UpdateUserRequest": {
                "type": "object",
                "properties": {
                    "avatar": {
                        "type": "string",
                        "description": "User's avatar",
                        "format": "binary"
                    },
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Your name"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "birthday": {
                        "type": "string",
                        "description": "User's birthday date",
                        "format": "date-time"
                    },
                    "phone": {
                        "type": "string",
                        "description": "User's phone number",
                        "example": "+380000000000"
                    },
                    "city": {
                        "type": "string",
                        "description": "User's city",
                        "example": "City"
                    }
                }
            },
            "LogoutRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "User's id",
                        "example": "jgnhdjugjudhbjvduguj"
                    }
                }
            },
            "AddNoticeRequest": {
                "type": "object",
                "description": "New notice",
                "required": [
                    "file",
                    "title",
                    "name",
                    "date",
                    "category",
                    "type",
                    "sex",
                    "location",
                    "price"
                ],
                "properties": {
                    "file": {
                        "type": "string",
                        "description": "Pet's photo",
                        "example": "fmhdjrg7rgbghy7",
                        "format": "binary"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category of notice",
                        "example": "for-free",
                        "enum": [
                            "sell",
                            "lost-found",
                            "for-free"
                        ]
                    },
                    "title": {
                        "type": "string",
                        "description": "Name of pet",
                        "example": "User"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of pet",
                        "example": "User"
                    },
                    "date": {
                        "type": "string",
                        "description": "Birthday date of pet",
                        "format": "date-time"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of pet in notice",
                        "example": "dog"
                    },
                    "sex": {
                        "type": "string",
                        "description": "Sex of pet in notice",
                        "example": "female",
                        "enum": [
                            "male",
                            "female"
                        ]
                    },
                    "location": {
                        "type": "string",
                        "description": "Location of pet in notice",
                        "example": "City"
                    },
                    "price": {
                        "type": "integer",
                        "description": "Price for pet in notice",
                        "example": "12"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comment to notice",
                        "example": "Comment for example"
                    }
                }
            },
            "DeleteNoticeByIdRequest": {
                "type": "object",
                "$ref": "#components/schemas/NoticeSchemaResponse"
            },
            "AddPetRequest": {
                "type": "object",
                "description": "New pet",
                "required": [
                    "file",
                    "name",
                    "date",
                    "type"
                ],
                "properties": {
                    "file": {
                        "type": "string",
                        "description": "Pet's photo",
                        "example": "fmhdjrg7rgbghy7",
                        "format": "binary"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of pet",
                        "example": "User"
                    },
                    "date": {
                        "type": "string",
                        "description": "Birthday date of pet",
                        "example": "24.08.1991"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of pet in pet",
                        "example": "dog"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comment to user's pet",
                        "example": "Comment for example"
                    }
                }
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Users token",
                        "example": "hmfghmcfhgfjhgfjgj.dfhdjfjmhgmfhjcnbncfgnchbvgfgfgfhgjfg.ghgjhtgjhjfnbgvnfhhfdygbnvggkghdkfhgk"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email"
                            }
                        }
                    }
                }
            },
            "GetUserInfoResponse": {
                "type": "object",
                "properties": {
                    "userI": {
                        "type": "object",
                        "$ref": "#components/schemas/UsersSchemaResponse"
                    }
                }
            },
            "UpdateUserInfoResponse": {
                "type": "object",
                "$ref": "#components/schemas/UsersSchemaResponse"
            },
            "GetNoticesResponse": {
                "type": "object",
                "description": "Object with array of notices and total number of notices",
                "properties": {
                   
                    "noticesList": {
                        "type": "array",
                        "description": "Notices with pagination",
                        "items": {
                            "type": "object",
                            "description": "Notice",
                            "$ref": "#components/schemas/GetNoticeByIdResponse"
                        }
                    },
                    "total": {
                        "type": "integer",
                        "description": "total number of notices",
                        "example": 24
                    }
                }
            },
            "GetFavoriteNoticesResponse": {
                "type": "object",
                "description": "Object with array of notices and total number of notices",
                "properties": {
                    "allFavNotices": {
                        "type": "array",
                        "description": "All notices",
                        "items": {
                            "type": "object",
                            "description": "Notice",
                            "$ref": "#components/schemas/GetNoticeByIdResponse"
                        }
                    },
                    "noticesList": {
                        "type": "array",
                        "description": "Notices with pagination",
                        "items": {
                            "type": "object",
                            "description": "Notice",
                            "$ref": "#components/schemas/GetNoticeByIdResponse"
                        }
                    },
                    "total": {
                        "type": "integer",
                        "description": "total number of notices",
                        "example": 24
                    }
                }
            },
            "AddNoticeResponse": {
                "type": "object",
                "description": "Response after adding new notice",
                "$ref": "#components/schemas/AddNoticeByIdRequest"
            },
            "DeleteNoticeByIdResponse": {
                "type": "object",
                "description": "Deleted notice",
                "$ref": "#components/schemas/GetNoticeByIdResponse"
            },
            "GetPetResponse": {
                "type": "array",
                "description": "All pets",
                "items": {
                    "type": "object",
                    "description": "Notice",
                    "properties": {
                        "_id": {
                            "type": "string",
                            "description": "Id of user's favorite notice",
                            "example": "64hn9bdbdrekmv"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of pet",
                            "example": "User"
                        },
                        "date": {
                            "type": "string",
                            "description": "Birthday date of pet",
                            "format": "date-time"
                        },
                        "type": {
                            "type": "string",
                            "description": "Type of pet in notice",
                            "example": "dog"
                        },
                        "comments": {
                            "type": "string",
                            "description": "Comment to notice",
                            "example": "Comment for example"
                        },
                        "owner": {
                            "type": "string",
                            "description": "User's id",
                            "example": "fmhdjrg7rgbghy7"
                        },
                        "createdAt": {
                            "type": "string",
                            "description": "Date of creating notice",
                            "example": "date-time"
                        },
                        "updatedAt": {
                            "type": "string",
                            "description": "Date of updating notice",
                            "example": "date-time"
                        }
                    }
                }
            },
            "AddPetResponse": {
                "type": "object",
                "description": "Response after adding new pet",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "API-message",
                        "example": "Here is message from API"
                    },
                    "item": {
                        "type": "object",
                        "description": "New notice",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of pet",
                                "example": "User"
                            },
                            "date": {
                                "type": "string",
                                "description": "Birthday date of pet",
                                "format": "date-time"
                            },
                            "type": {
                                "type": "string",
                                "description": "Type of pet in notice",
                                "example": "dog"
                            },
                            "comments": {
                                "type": "string",
                                "description": "Comment to notice",
                                "example": "Comment for example"
                            },
                            "owner": {
                                "type": "string",
                                "description": "User's id",
                                "example": "fmhdjrg7rgbghy7"
                            },
                            "_id": {
                                "type": "string",
                                "description": "Id of user's favorite notice",
                                "example": "64hn9bdbdrekmv"
                            },
                            "createdAt": {
                                "type": "string",
                                "description": "Date of creating notice",
                                "example": "date-time"
                            },
                            "updatedAt": {
                                "type": "string",
                                "description": "Date of updating notice",
                                "example": "date-time"
                            }
                        }
                    }
                }
            },
            "DeletePetByIdResponse": {
                "type": "object",
                "description": "Deleted pet",
                "properties": {
                    "fileURL": {
                        "type": "string",
                        "description": "Pet's photo",
                        "example": "fmhdjrg7rgbghy7",
                        "format": "binary"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of pet",
                        "example": "User"
                    },
                    "date": {
                        "type": "string",
                        "description": "Birthday date of pet",
                        "example": "24.08.1991"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of pet in pet",
                        "example": "dog"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comment to user's pet",
                        "example": "Comment for example"
                    },
                    "owner": {
                        "type": "string",
                        "description": "User's id",
                        "example": "fmhdjrg7rgbghy7"
                    }
                }
            },
            "GetFriendsResponse": {
                "type": "array",
                "description": "All friends",
                "items": {
                    "type": "object",
                    "description": "Friends",
                    "properties": {
                        "_id": {
                            "type": "string",
                            "description": "Id of friend",
                            "example": "64hn9bdbdrekmv"
                        },
                        "title": {
                            "type": "string",
                            "description": "Name of friend",
                            "example": "User's friend"
                        },
                        "url": {
                            "type": "string",
                            "description": "Web-site of friend",
                            "example": "https://lkplev4rf.com/"
                        },
                        "addressUrl": {
                            "type": "string",
                            "description": "Friend's point on the map",
                            "example": "https://goo.gl/maps/4xMfxtahHPfXeAYU8"
                        },
                        "imageUrl": {
                            "type": "string",
                            "description": "Friend's logo",
                            "example": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_289.png"
                        },
                        "address": {
                            "type": "string",
                            "description": "Friend's address",
                            "example": "index, City, address"
                        },
                        "workDays": {
                            "type": "array",
                            "description": "Friend's work time",
                            "example": "Mo: 8:00 - 17:00"
                        },
                        "phone": {
                            "type": "string",
                            "description": "Friend's contact phone",
                            "example": "+380000000000"
                        },
                        "email": {
                            "type": "string",
                            "description": "User's id",
                            "format": "email"
                        },
                        "createdAt": {
                            "type": "string",
                            "description": "Date of creating notice",
                            "example": "date-time"
                        },
                        "updatedAt": {
                            "type": "string",
                            "description": "Date of updating notice",
                            "example": "date-time"
                        }
                    }
                }
            },
            "GetNewsResponse": {
                "type": "object",
                "description": "All news",
                "properties": {
                    "newsList": {
                        "type": "array",
                        "description": "All news",
                        "items": {
                            "type": "object",
                            "description": "News",
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "description": "Id of new",
                                    "example": "64hn9bdbdrekmv"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title of new",
                                    "example": "User's friend"
                                },
                                "url": {
                                    "type": "string",
                                    "description": "Web-page of new",
                                    "example": "https://www.nytimes.com/2023/04/11/magazines/dogsitting-rich-new-york.html"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "text of new",
                                    "example": "Here is the text of new"
                                },
                                "imageUrl": {
                                    "type": "string",
                                    "description": "New's photo",
                                    "example": "https://www.nytimes.com/images/2023/04/16/magazines/16mag-LOR/16mag-LOR-blog480.jpg"
                                },
                                "date": {
                                    "type": "string",
                                    "description": "News creation date",
                                    "example": "index, City, address"
                                },
                                "createdAt": {
                                    "type": "string",
                                    "description": "Date of creating notice",
                                    "example": "date-time"
                                },
                                "updatedAt": {
                                    "type": "string",
                                    "description": "Date of updating notice",
                                    "example": "date-time"
                                }
                            }
                        }
                    },
                    "total": {
                        "type": "integer",
                        "description": "Total number of news",
                        "example": 24
                    }
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}